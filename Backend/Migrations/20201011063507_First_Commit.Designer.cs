// <auto-generated />
using System;
using BioData.DbRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BioData.Migrations
{
    [DbContext(typeof(BioDataContext))]
    [Migration("20201011063507_First_Commit")]
    partial class First_Commit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("BioData.Data.Biodata", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Homepage")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Biodata");
                });

            modelBuilder.Entity("BioData.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BiodataId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BiodataId");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("BioData.Data.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BiodataId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("BiodataId");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("BioData.Data.LinkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LinkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkId");

                    b.ToTable("LinkType");
                });

            modelBuilder.Entity("BioData.Data.OperatingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BiodataId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BiodataId");

                    b.ToTable("OperatingSystem");
                });

            modelBuilder.Entity("BioData.Data.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("BioData.Data.ToolType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BiodataId")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BiodataId");

                    b.ToTable("ToolType");
                });

            modelBuilder.Entity("BioData.Data.Biodata", b =>
                {
                    b.HasOne("BioData.Data.Owner", null)
                        .WithMany("Biodata")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("BioData.Data.Language", b =>
                {
                    b.HasOne("BioData.Data.Biodata", null)
                        .WithMany("Languages")
                        .HasForeignKey("BiodataId");
                });

            modelBuilder.Entity("BioData.Data.Link", b =>
                {
                    b.HasOne("BioData.Data.Biodata", null)
                        .WithMany("Links")
                        .HasForeignKey("BiodataId");
                });

            modelBuilder.Entity("BioData.Data.LinkType", b =>
                {
                    b.HasOne("BioData.Data.Link", null)
                        .WithMany("LinkTypes")
                        .HasForeignKey("LinkId");
                });

            modelBuilder.Entity("BioData.Data.OperatingSystem", b =>
                {
                    b.HasOne("BioData.Data.Biodata", null)
                        .WithMany("OperatingSystems")
                        .HasForeignKey("BiodataId");
                });

            modelBuilder.Entity("BioData.Data.ToolType", b =>
                {
                    b.HasOne("BioData.Data.Biodata", null)
                        .WithMany("ToolType")
                        .HasForeignKey("BiodataId");
                });

            modelBuilder.Entity("BioData.Data.Biodata", b =>
                {
                    b.Navigation("Languages");

                    b.Navigation("Links");

                    b.Navigation("OperatingSystems");

                    b.Navigation("ToolType");
                });

            modelBuilder.Entity("BioData.Data.Link", b =>
                {
                    b.Navigation("LinkTypes");
                });

            modelBuilder.Entity("BioData.Data.Owner", b =>
                {
                    b.Navigation("Biodata");
                });
#pragma warning restore 612, 618
        }
    }
}
